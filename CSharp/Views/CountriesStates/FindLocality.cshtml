@model CSharp.Models.CountriesStatesModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var statesURL = Url.Content("~/countriesstates/getStates");
}

        <div class="page-header">
          <h1>Find a locality</h1>
        </div>
        <p>
          The following allows the retrieval of a specific locality by search criteria. You must supply a country id and at least one other fields to get a result that can be passed into the advanced search along with a radius for regional searches.
        </p>
        <p> <b>For performance reasons, you should always cache the results of these filter calls such as country and sector. The underlying data changes very rarely.</b> 
        </p>         
        <div class="row">
          <div class="col-md-6">
            <h4>Filter</h4>
              @using (Html.BeginForm("findlocality", "countriesstates"))
              {
                  <div class="form-group">
                      <label for="CountryDdl">Select Country</label>
                      @Html.DropDownListFor(m => m.CountryId, Model.Countries,"Select Country", new { @class = "form-control", @data_Url = statesURL })
                  </div>
                  <div class="form-group">

                      <label for="StateDdl">Select State</label>
                      @Html.DropDownListFor(m => m.StateId, Model.States, new { @class = "form-control" })
                  </div>
                  <div class="form-group">
                      <label for="CountryDdl">Suburb</label>
                      @Html.TextBoxFor(m => m.Suburb, new { @class="form-control"})
                  </div>
                  <div class="form-group">
                      <label for="CountryDdl">Postcode</label>
                      @Html.TextBoxFor(m => m.PostCode, new { @class="form-control"})
                  </div>
                  <div class="form-group">
                      <button type="submit" class="btn btn-default">Submit</button>
                  </div>
             }
        <h5>Raw Results</h5> 
            <pre class="prettyprint">
                @Model.RawOutput
            </pre>
          </div>
          <div class="col-md-6">

            <h4>Results</h4>
            <br>
              @if(!string.IsNullOrEmpty(Model.RawOutput))
              {
                  <table cellpadding="0" class="table">
                      <tr>
                        <td>Id</td>
                        <td>@Model.Location.Id</td>
                      </tr>
                      <tr>
                        <td>Description</td>
                        <td>@Model.Location.LocationShort</td>
                      </tr>
                      <tr>
                        <td>City</td>
                        <td>@Model.Location.City</td>
                      </tr>
                      <tr>
                        <td>State</td>
                        <td>@Model.Location.State</td>
                      </tr>
                      <tr>
                        <td>State Id</td>
                        <td>@Model.Location.StateId</td>
                      </tr>
                      <tr>
                        <td>Postcode</td>
                        <td>@Model.Location.Postcode</td>
                      </tr>
                      <tr>
                        <td>CountryId</td>
                        <td>@Model.Location.CountryId</td>
                      </tr>
                      <tr>
                        <td>Latitude, Longitude</td>
                        <td>@Model.Location.LocationLatLong</td>
                      </tr>
                  </table>
              }
               
          </div>
        </div>
